; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = waveshare_esp32-s3-touch-lcd-1_69

[env]
lib_deps = 
			; bitbank2/bb_spi_lcd @ ^2.7.1
			; bitbank2/AnimatedGIF @ ^2.1.1
build_flags = 

monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
monitor_filters = esp32_exception_decoder
monitor_port = /dev/cu.usbmodem14101
upload_port = /dev/cu.usbmodem14101
; monitor_port = /dev/cu.usbserial-A5069RR4
; upload_port = /dev/cu.usbserial-A5069RR4

; [esp32]
; platform = espressif32
; framework = arduino
; extra_scripts = post:support/esp32_build_extra.py
; lib_deps = 
; 	${env.lib_deps}
; 	lovyan03/LovyanGFX@^1.1.16
; 	fbiego/ChronosESP32@^1.5.0
; 	fbiego/Timber@^1.0.0
; 	bblanchon/ArduinoJson@^7.1.0
; build_flags = 
; 	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
; 	-D LV_CONF_PATH="${PROJECT_DIR}/include/lv_conf.h"
; 	-I lib
; 	-D LV_TICK_CUSTOM=1
; 	-D LV_MEM_CUSTOM=0
; 	-D LV_USE_FS_FATFS=1
; build_src_filter = 
; 	+<*>
; 	+<../hal/esp32>

[env:waveshare_esp32-s3-touch-lcd-1_69]
; platform = https://github.com/platformio/platform-espressif32.git
; framework = arduino, espidf
; platform = espressif32
; platform_packages =
;   framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32
; platform = espressif32@6.9.0
platform = https://github.com/tasmota/platform-espressif32.git#Arduino/IDF5
framework = arduino

; extra_scripts = post:support/esp32_build_extra.py
; board = waveshare_esp32-s3-touch-lcd-1_69
board = esp32-s3-devkitc-1
; board = Waveshare ESP32-S3-Touch-LCD-1.69
board_upload.flash_size = 16MB
board_build.flash_mode = qio
; board_build.flash_mode = dio
board_build.f_flash = 80000000L
board_build.partitions = partitions_spiffs.csv
board_build.filesystem = littlefs
board_build.arduino.memory_type = qio_opi
lib_deps =
			; SPI
			; bitbank2/bb_spi_lcd @ ^2.7.1
			; plerup/EspSoftwareSerial @ 8.2.0
			moononournation/GFX Library for Arduino @ ^1.5.0
			bitbank2/AnimatedGIF @ ^2.1.1
			; mjdonders/CST816_TouchLib @ ^1.0.1
			; lewisxhe/SensorLib @ 0.1.6
			lewisxhe/SensorLib @ ^0.2.2
			; esphome/ESP32-audioI2S @ ^2.0.7
			; earlephilhower/ESP8266Audio @ ^1.9.9
			; madhephaestus/ESP32Servo @ ^3.0.5
			; adafruit/Adafruit MP3 @ 1.2.6
			; ESP_I2S

build_flags = -DCORE_DEBUG_LEVEL=5
              -DBOARD_HAS_PSRAM
			  -DSOC_I2S_SUPPORTED
              -mfix-esp32-psram-cache-issue

; [env:esp32doit-devkit-v1]
; extends = esp32
; board = esp32doit-devkit-v1
; board_build.partitions = partitions.csv
; lib_deps = 
; 	${esp32.lib_deps}
; 	bitbank2/bb_spi_lcd@^2.7.1
; build_flags = 
; 	${esp32.build_flags}
; 	-D LV_MEM_SIZE=60U*1024U
; 	-D LV_MEM_ADR=0
; build_src_filter = ${esp32.build_src_filter}
